services:
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile.dev
    container_name: portfolio-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - VITE_HOST=0.0.0.0
      - NODE_ENV=development
    stdin_open: true
    tty: true
    networks:
      - portfolio-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio-api-dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/rails
      - ./backend/config/master.key:/rails/config/master.key:ro
      - backend_tmp:/rails/tmp
      - backend_logs:/rails/log
    environment:
      - RAILS_ENV=development
      - BINDING=0.0.0.0
      - CORS_ORIGINS=http://localhost:5173
      - DATABASE_URL=postgresql://portfolio_user:portfolio_pass@portfolio-db-dev:5432/portfolio
    stdin_open: true
    tty: true
    networks:
      - portfolio-network
    depends_on:
      - frontend

  postgres:
    image: postgres:17
    container_name: portfolio-db-dev
    restart: always
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  postgres_data:
    name: portfolio_postgres_data
  frontend_node_modules:
    name: portfolio_frontend_node_modules
  backend_tmp:
    name: portfolio_backend_tmp
  backend_logs:
    name: portfolio_backend_logs